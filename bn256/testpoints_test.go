package bn256

func testPointsG1() []G1Jac {
	var p [22]G1Jac

	// p0
	p[0].X.SetString("16136477863895212049116837538159456976053980364000089191811312707815806892427")
	p[0].Y.SetString("4310293206130354412480322090271321698513108961683717502632485513758245842731")
	p[0].Z.SetString("1234")

	// p1 = p0.ToAffineFromJac
	p[1].X.SetString("5077962315732393431547969025155915318879591078826892465523702364260539130195")
	p[1].Y.SetString("8679067019582343879908605361903830772988320388703255702379976223833923987221")
	p[1].Z.SetString("1")

	// p2
	p[2].X.SetString("12140519145276023578656979607187658618924051769584049807840200913212110355279")
	p[2].Y.SetString("14945291053796992035260939569151955556559209770505682440874133795346463657588")
	p[2].Z.SetString("1")

	// p3 = p1 + p2
	p[3].X.SetString("9492136635650106230986258089839490534285341010515212324441652116723052115935")
	p[3].Y.SetString("16703276621774958503424073660964841876533498120846374986887448184605909710166")
	p[3].Z.SetString("1")

	// p4 = p1 - p2
	p[4].X.SetString("6293461913112720034309886333494920526446564613227628516097831323327919760691")
	p[4].Y.SetString("4107764625492941402542995454593285656523315983317176910326883274425822679975")
	p[4].Z.SetString("1")

	// p5 = 2 * p1
	p[5].X.SetString("15219269743786808352473675796524893213025632068818524542849593619361509810694")
	p[5].Y.SetString("8028813499788663476775597578071254949090847489432666372444034883081066329715")
	p[5].Z.SetString("1")

	// p6 = [p1]32394 (scalar mul)
	p[6].X.SetString("602308421817271842589373299186239362196678324538620620298857159109508194327")
	p[6].Y.SetString("19917962545967645409868683594122305735152961430882828284480947255092854485968")
	p[6].Z.SetString("1")

	// p[7] to p[16] not replicated from bls377

	// p17, p18, 19 *  multiExp s1, s2, s3 = p20
	// s1 := [4]uint64{23872983, 238203802, 9827897384, 2372}
	// s2 := [4]uint64{128923, 2878236, 398478, 187970707}
	// s3 := [4]uint64{9038947, 3947970, 29080823, 282739}
	p[17].X.SetString("17178819885765655190582070198413467176779544756606653263298799146998617639529")
	p[17].Y.SetString("6967931706435374105717753379348415505328979935776995837996597262711574787420")
	p[17].Z.SetString("1")

	p[18].X.SetString("1460880727805677426033858653624435439602408398745632490231587445941493181193")
	p[18].Y.SetString("4721093170090918255073606030890655698403477820735196349015433040481604286748")
	p[18].Z.SetString("1")

	p[19].X.SetString("10746685224066489552064786181435993812043768706733620687409181836019594020520")
	p[19].Y.SetString("13295614656469040141873885218449872146903927620411191528790258300987030093419")
	p[19].Z.SetString("1")

	// p20 == res of multi exp
	p[20].X.SetString("9109721385023834622264770461947926324324751354069601267348438854512669645237")
	p[20].Y.SetString("4539228917977179828838399473499946126297971368857857954022139529898643298962")
	p[20].Z.SetString("1")

	// p21 == (4-word maxuint)*p1
	p[21].X.SetString("12621361315706030743404174438543117716274926909374208049619638834911723329953")
	p[21].Y.SetString("14372236247557505933929272248032303307374380700289866728172001479892298500335")
	p[21].Z.SetString("1")

	return p[:]
}

func testPointsG2() []G2Jac {

	var p [22]G2Jac

	// p0
	p[0].X.SetString(
		"4295563638500786782562963921232374813036557810495924581926808279272960428403",
		"20977085216808592083342070517943147456450208828675775160411834193549098728773")
	p[0].Y.SetString(
		"7195742981034666332293377284887193189475668460604120107733908587369501685142",
		"4507890142277109789182876409717501963673566088418605592669633257980200221329")
	p[0].Z.SetString(
		"4",
		"5")

	// p1 = p0.ToAffineFromJac
	p[1].X.SetString(
		"21387829499166991439154279460029636119801876889632880718297279566941547053111",
		"2741234276868653584412455034302568783762372659624442005776105153582157075344")
	p[1].Y.SetString(
		"17336653084963236202906880963508617370681486526772544590154653923697387100352",
		"8707084505271241013609523947582819156486382703230158869759248651064216080275")
	p[1].Z.SetString(
		"1",
		"0")

	// p2
	p[2].X.SetString(
		"11506439749177368052947928630536758329808063398830617846794148000224637753146",
		"14791918325418497703371055041272272025221888631511120661766263175637653198851")
	p[2].Y.SetString(
		"10191457944050009344740987438037235040130352882256368265051633619951296239157",
		"13261069725461908577834580451944689961963884282683160677158169046841105073946")
	p[2].Z.SetString(
		"1",
		"0")

	// p3 = p1 + p2
	p[3].X.SetString(
		"17521250374706321200455118782485091239656441888563049833651823860373848152220",
		"20306929681196427434080926292344051943185841002051785079399704219072510130455")
	p[3].Y.SetString(
		"1175230638610719718942789338918950355539207516516531988101380669408791523461",
		"15629689716347290414575487807245635888817139965107937678396560757579542643842")
	p[3].Z.SetString(
		"1",
		"0")

	// p4 = p1 - p2
	p[4].X.SetString(
		"16646958125318885474119398946320407516015482751022906749995931667412462869035",
		"3979250317133682244387190247613728464032807963121149039767856511773333702564")
	p[4].Y.SetString(
		"11418227128794009249331777002337315743744979940751734539813234734692005147785",
		"10603450518475646195174296956743056621401212933063784362005192388098594584899")
	p[4].Z.SetString(
		"1",
		"0")

	// p5 = 2 * p1
	p[5].X.SetString(
		"5085451634826807655626759668932704593491693236811826377942879653889090073049",
		"4991973513180050454833046201112245473015734832486642010051753360563312734056")
	p[5].Y.SetString("5895517549418633969651468090145401251289416716871872376582568639053531760558",
		"14056756068619140853880989887863076968884520609043416067288213847281641388771")
	p[5].Z.SetString(
		"1",
		"0")

	// p6 = [p1]32394 (scalar mul)
	p[6].X.SetString(
		"13617885012148396053642778724119601755128151941089641093879946080723533552385",
		"19062077248354334522033848410070266052003600057390107360812250621931426446838")
	p[6].Y.SetString(
		"2873041414167462272072084997952603485490628440269764977378778099934979597754",
		"18900397334006643067990111059064421657448927728690307894304857802649868328287")
	p[6].Z.SetString(
		"1",
		"0")

	// p[7] to p[16] not replicated from bls377

	// p17, p18, 19 *  multiExp s1, s2, s3 = p20
	// s1 := [4]uint64{23872983, 238203802, 9827897384, 2372}
	// s2 := [4]uint64{128923, 2878236, 398478, 187970707}
	// s3 := [4]uint64{9038947, 3947970, 29080823, 282739}
	p[17].X.SetString(
		"6280675843406923423316577600694888964906884321223372185103519887130090681586",
		"8821942975381774136714919814137866692593095695696579066184029147639380756053")
	p[17].Y.SetString(
		"21489578689446628847970496562663898952159199396354792262009753994345722371137",
		"12047855003950897118227177488944366071399100026873185768816438152506000440310")
	p[17].Z.SetString(
		"1",
		"0")

	p[18].X.SetString(
		"18266812961165398549109340760236448719896058417781697590625535383067895697932",
		"16683922768892478180629924100966398567151929928306131494048052550782299250946")
	p[18].Y.SetString(
		"11791443923461319423786343526502961253682992961425824797867216643811420044924",
		"14998158673246010817593312050844027929887481968470709334757728911713710697704")
	p[18].Z.SetString(
		"1",
		"0")

	p[19].X.SetString(
		"21797933274118352007115220575798226586484731209922884549121696782667950145379",
		"21383956343663430919785656200947328515609176972789864030966076987379471942163")
	p[19].Y.SetString(
		"1140783183542840884659090975032382234564626261784168184867723083088536708172",
		"5100014377801226636905268226734489236804662610935379352274814439572272315171")
	p[19].Z.SetString(
		"1",
		"0")

	// p20 == res of multi exp
	p[20].X.SetString(
		"12282266978735816148546013491102423669144880803788931202287771058183967994366",
		"5616834333011604201884399636592175069996776392856335991211512004025520046290")
	p[20].Y.SetString(
		"30609250202525430259708479663717288178564698613768989993668270210247489639",
		"9322483171062908304513694365813752998874360082623919344536978945259902528193")
	p[20].Z.SetString(
		"1",
		"0")

	// p21 == (4-word maxuint)*p1
	p[21].X.SetString(
		"14395003398603548562761429015090433265863932002299407527254596723612849782759",
		"5720634663221903819765119717594189965145433905346515625885800457099494825451")
	p[21].Y.SetString(
		"9360100162291804786377167894540736531588090470400632366225052479696467660278",
		"15142355968451824193638947718908774056025313920775979380118561380284965762558")
	p[21].Z.SetString(
		"1",
		"0")

	return p[:]
}

func testPointsG1MultiExpResults() (numPoints []int, results []G1Jac) {

	// numPoints = []int{3, 10, 100, 1000, 10000, 40000, 100000}
	numPoints = []int{3, 10, 100, 1000, 10000}
	results = make([]G1Jac, len(numPoints))

	// results[i] is the correct result of a call to MultiExp() with points, scalars obtained from testPointsG1MultiExp(numPoints[i])
	results[0].X.SetString("21823068321801324264246932177565542007558933997910700825630665687278407072755")
	results[0].Y.SetString("16363490754264238285158153641602398262936592272245759447416429802071216556398")
	results[0].Z.SetString("1")

	results[1].X.SetString("13815345236147268646421076867730742869957813854411453959377257350757210271364")
	results[1].Y.SetString("17682266209456948512040738671875089228616964163743186073941786345441281452536")
	results[1].Z.SetString("1")

	results[2].X.SetString("3288974316043067651372453043431675392510574138108409176384584315895377745646")
	results[2].Y.SetString("3238875461451030501940937494636334577607188587872244018526219126218967297852")
	results[2].Z.SetString("1")

	results[3].X.SetString("3246358504018312280490136845807124125588025188566651933500100317911192805668")
	results[3].Y.SetString("21382468183726643863380489724459807507925550816522642135958492994154820495151")
	results[3].Z.SetString("1")

	results[4].X.SetString("7986938277825977167717629829088835068193140040586187858716846674113015653253")
	results[4].Y.SetString("8528498341058869644414978903704909806405107236392482536715709223267487086501")
	results[4].Z.SetString("1")

	// results[5].X.SetString("174726425602612409871117349550442447793392830539428091034317231404863071348963900550105936476769273104441605387471")
	// results[5].Y.SetString("78667243717276722997367850074282147024960711878205676784883024627806097669419139243867546374951219178316064697147")
	// results[5].Z.SetString("1")

	// results[6].X.SetString("138671866875049014460325223627448433792468765135069488284141862889475194960245595363099811289409216974304797784683")
	// results[6].Y.SetString("181164511376313563167278130122243418652082373082573007445455589404606795890548834473895883485588067757132508312576")
	// results[6].Z.SetString("1")

	return numPoints, results
}

func testPointsG2MultiExpResults() (numPoints []int, results []G2Jac) {

	// numPoints = []int{3, 10, 100, 1000, 10000, 40000, 100000}
	numPoints = []int{3, 10, 100, 1000, 10000}
	results = make([]G2Jac, len(numPoints))

	// results[i] is the correct result of a call to MultiExp() with points, scalars obtained from testPointsG1MultiExp(numPoints[i])
	results[0].X.SetString("9744533565299549798811882408400864810917743451440547817726300253373739157614", "2479387564119333310025127498830864681644333631072106936513831370958753531637")
	results[0].Y.SetString("6286044029317501759709115603001076408275087437030553245083306533739207946030", "15926185610847029765710142354332817883563703393603345064375006008177007265288")
	results[0].Z.SetString("1", "0")

	results[1].X.SetString("16443733177630792654750398116472655777377437265700537410309313050108656182753", "12032003544017166656290055180464392381450852692332913046975887044908077941043")
	results[1].Y.SetString("13319626638999726283897002362202261086859428043507635324645636166188602982340", "12220033323617473327344460736800944055957642633914934192630721740534013995312")
	results[1].Z.SetString("1", "0")

	results[2].X.SetString("16414050765579347072931326787263094989531433567846869327307424702589123000311", "9275888744814559947125544514127011001174197442679469172557315359924120081348")
	results[2].Y.SetString("3605907440182038344700816770018632232794150395010414724676465274304427012143", "9618157707639426906247811447063943037878760866083486416385767675061155561122")
	results[2].Z.SetString("1", "0")

	results[3].X.SetString("3319141713357252056396189859078463073123163214795270806282688716743503744214", "17265633798585747628167412971759347990636339789703676764076917541414536663843")
	results[3].Y.SetString("4584764017725683921195605422567097987176366014448830578926359936478145427580", "13715834265552892533704722230516871665670449304086243155110400650671944956974")
	results[3].Z.SetString("1", "0")

	results[4].X.SetString("16619899412987329916593471127820677878496274980167423702178814519248896008124", "11881005026711950444999168859047426267651773752136329581098085905757433098834")
	results[4].Y.SetString("20746951231970086264538435937942269921387258757093926818416964546052070249531", "8734107452357857264844498135371019542973101504295572412973779004020713163761")
	results[4].Z.SetString("1", "0")

	// results[5].X.SetString("201807775096989966680767386931709910109379987129950282337816764673393112014814630555568113030518691051087881679000", "110030068071180046294243738844362032878145181870079171976251969030556962132577022410169004282737772794226662913103")
	// results[5].Y.SetString("56844626940924884826885517611993278692743014349326655935956149147898701499013033691800787951228822587399193027994", "242276761124031297290914712351169949160095935055733945943210598350408812424612707018929301956794274916286562370826")
	// results[5].Z.SetString("1", "0")

	// results[6].X.SetString("33514021694280699508968035027077166613025356836264586532410525622610950855527033829392500778367194475694813270427", "215157238962893988211570897268792861887454317579185078199804937830755862734494408568360944443760891144549210691374")
	// results[6].Y.SetString("134836144050657451785051205208586077741559724544344739454701286920723433111216706834743856501190637179999982011926", "56936738555332765978668695896266799297487692241196801589915736548731583606115317075635100125794623933574467744418")
	// results[6].Z.SetString("1", "0")

	return numPoints, results
}
